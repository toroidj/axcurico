 ------------------------------------------------------------------------------
   Cursor / Icon Susie Plug-in  Version 1.2  Copyright (c)2017,2018 TORO
 ------------------------------------------------------------------------------

	複数の画像が格納されている、アイコン(.ico)、カーソル(.cur)、
	アニメーションカーソル(.ani)内の各画像を参照するための
	Susie Plug-in です。

	Susie Plug-in は、竹村嘉人 (たけちん)氏作の画像ローダ「Susie」
	用のPlug-inで、様々な形式の画像ファイルを読み込めるようにする
	ためのものです。
	( http://www.digitalpad.co.jp/~takechin/ )


●動作環境
・対応/動作確認 OS

	Windows 95以降で動作すると思います。

・レジストリ

	レジストリは使用しません。

●インストール

	Susie Plug-in 用のディレクトリに axcurico.spi をコピーしてください。
	64bitアプリケーションの場合は、axcurico.sph をコピーしてください


●アンインストール

	コピーした axcurico.spi / axcurico.sph を削除してください。


● OS 以外に必要なソフトウェア

	特にありません。


●仕様
・アイコン・カーソル

	1ファイルに2以上のアイコン・カーソルが格納されている
	マルチアイコン、マルチカーソルが対象です。1つのみの場合、
	本プラグインは無視します。


・アニメーションカーソル

	取得できる一覧には、２種類の一覧が含まれています。
	ファイル名 001.cur 等 …シーケンス順のフレーム一覧です。
	                        後述するraw.curをシーケンス順に並べています
	ファイル名 raw\raw001.cur 等 …ファイルに含まれているカーソルの一覧です

	カーソルそのもの表示には別の Susie Plug-in が必要です。
	拙作 iftwic.spi / iftwic.sph 等を使用してください。


・マルチスレッド動作

	本 Plug-in は、複数のファイルをマルチスレッドやシングルスレッドで
	平行して扱うことができません。一度に１つの書庫のみシングルスレッドか
	マルチスレッドで扱えます（IsSupportedで指定した書庫のみ操作可能）。


●64bit版 Susie Plug-in の仕様について

	64bit版の正式な仕様がないため、次のような仕様にしています。
	また、拡張子は .sph としています。

	ファイルサイズと時刻に関わる部分と、コールバックの追加引数を
	64bit化した以外はそのままになっています。

//-------------------------------------- DLL 定数
#define SUSIEERROR_NOERROR       0
#define SUSIEERROR_NOTSUPPORT   -1
#define SUSIEERROR_USERCANCEL    1
#define SUSIEERROR_UNKNOWNFORMAT 2
#define SUSIEERROR_BROKENDATA    3
#define SUSIEERROR_EMPTYMEMORY   4
#define SUSIEERROR_FAULTMEMORY   5
#define SUSIEERROR_FAULTREAD     6
#define SUSIEERROR_RESERVED      7
#define SUSIEERROR_INTERNAL      8

typedef ULONG_PTR susie_time_t;
//-------------------------------------- DLL 構造体
#pragma pack(push,1)
typedef struct PictureInfo{
    long    left,top;	// 画像を展開する位置
    long    width;	// 画像の幅(pixel)
    long    height;	// 画像の高さ(pixel)
    WORD    x_density;	// 画素の水平方向密度
    WORD    y_density;	// 画素の垂直方向密度
    short   colorDepth;	// １画素当たりのbit数
    #ifdef _WIN64
      char  dummy[2]; // アラインメント
    #endif
    HLOCAL  hInfo;	// 画像内のテキスト情報
} SUSIE_PICTUREINFO;

typedef struct {
    unsigned char  method[8];	// 圧縮法の種類
    ULONG_PTR      position;	// ファイル上での位置
    ULONG_PTR      compsize;	// 圧縮されたサイズ
    ULONG_PTR      filesize;	// 元のファイルサイズ
    susie_time_t   timestamp;	// ファイルの更新日時
    char           path[200];	// 相対パス
    char           filename[200];	// ファイル名
    unsigned long  crc;	// CRC
    #ifdef _WIN64
       // 64bit版の構造体サイズは444bytesですが、実際のサイズは
       // アラインメントにより448bytesになります。環境によりdummyが必要です。
       char        dummy[4];
    #endif
} SUSIE_FINFO;
#pragma pack(pop)

// コールバック
typedef int (__stdcall *SUSIE_PROGRESS)(int nNum, int nDenom, LONG_PTR lData);

//-------------------------------------- DLL 関数
int __stdcall GetPluginInfo(int infono, LPSTR buf, int buflen);
int __stdcall IsSupported(LPCSTR filename, void *dw);
int __stdcall ConfigurationDlg(HWND hWnd, int function);
int __stdcall GetPictureInfo(LPCSTR buf, LONG_PTR len, unsigned int flag, struct PictureInfo *lpInfo);
int __stdcall GetPicture(LPCSTR buf, LONG_PTR len, unsigned int flag, HANDLE *pHBInfo, HANDLE *pHBm, SUSIE_PROGRESS lpPrgressCallback, LONG_PTR lData);
int __stdcall GetPreview(LPSTR buf, LONG_PTR len, unsigned int flag, HANDLE *pHBInfo, HANDLE *pHBm, SUSIE_PROGRESS lpPrgressCallback, LONG_PTR lData);
int __stdcall GetArchiveInfo(LPCSTR buf, LONG_PTR len, unsigned int flag, HLOCAL *lphInf);
int __stdcall GetFile(LPCSTR src, LONG_PTR len, LPSTR dest, unsigned int flag, SUSIE_PROGRESS prgressCallback, LONG_PTR lData);
int __stdcall GetFileInfo(LPCSTR buf, LONG_PTR len, LPCSTR filename, unsigned int flag, SUSIE_FINFO *lpInfo);

// DLL 動的読み込み用
typedef int (__stdcall *GETPLUGININFO)(int infono, LPSTR buf, int buflen);
typedef int (__stdcall *ISSUPPORTED)(LPCSTR filename, void *dw);
typedef int (__stdcall *CONFIGURATIONDLG)(HWND hWnd, int function);
typedef int (__stdcall *GETPICTUREINFO)(LPCSTR buf, LONG_PTR len, unsigned int flag, struct PictureInfo *lpInfo);
typedef int (__stdcall *GETPICTURE)(LPCSTR buf, LONG_PTR len, unsigned int flag, HANDLE *pHBInfo, HANDLE *pHBm, SUSIE_PROGRESS lpPrgressCallback, LONG_PTR lData);
typedef int (__stdcall *GETPREVIEW)(LPCSTR buf, LONG_PTR len, unsigned int flag, HANDLE *pHBInfo, HANDLE *pHBm, SUSIE_PROGRESS lpPrgressCallback, LONG_PTR lData);
typedef int (__stdcall *GETARCHIVEINFO)(LPCSTR buf, LONG_PTR len, unsigned int flag, HLOCAL *lphInf);
typedef int (__stdcall *GETFILE)(LPCSTR src, LONG_PTR len, LPSTR dest, unsigned int flag, SUSIE_PROGRESS prgressCallback, LONG_PTR lData);
typedef int (__stdcall *GETFILEINFO)(LPCSTR buf, LONG_PTR len, LPCSTR filename, unsigned int flag, SUSIE_FINFO *lpInfo);


●最後に

	・このソフトウェアはフリーソフトウェアです。著作権は「TORO」、
	  「高橋 良和」にあります。

	・このソフトウェアを使用した事による利益・損害等は、こちらでは
	  一切責任を負いません。

	・転載は自由に行えます。
	  また、営利目的での配布はこちらに連絡下さい。

	・32bit版は、Borland C++ Version 5.02 を用いて構築しています。
	  64bit版は、Visual Studio 2008 を用いて構築しています。

	・ソースを添付しています。個人で使用する範囲であれば自由に改変
	  することができます。


●履歴
Version 1.2	2018/06/30
・マルチアイコン・カーソルも対象にし、名称を axanicur.spi/sph から変更した

Version 1.1	2017/11/11
・GetFile で raw001.cur がファイル出力できなかったのを修正

Version 1.0	2017/10/22
・初版

●連絡先／一次配布先						TORO／高橋 良和

E-mail	toroid.jp@gmail.com
WWW	http://toro.d.dooo.jp/
